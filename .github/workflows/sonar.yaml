name: CI/CD Pipeline with SonarQube and Tomcat Deployment

on:
  push:
    branches:
      - master

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Validate with Maven
        run: mvn validate

      - name: Compile with Maven
        run: mvn compile

      - name: Test with Maven
        run: mvn test

      - name: Package with Maven
        run: mvn clean package

      - name: Verify WAR file
        run: ls -lh target/

      - name: SonarQube analysis
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=train-ticket-reservation \
            -Dsonar.host.url="${{ secrets.SONAR_HOST_URL }}" \
            -Dsonar.login="${{ secrets.SONAR_TOKEN }}"

  deploy:
    needs: build-and-analyze
    runs-on: ubuntu-latest
    if: success()  # Only deploy if the previous job succeeded

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy to Tomcat
        run: |
         curl -v -u "${{ secrets.TOMCAT_USER }}:${{ secrets.TOMCAT_PASSWORD }}" \
         -T target/TrainBook-1.0.0-SNAPSHOT.war \
         "http://${{ secrets.TOMCAT_HOST }}:8080/manager/text/deploy?path=/TrainBook&update=true"

