name: Build and Deploy train-ticket-reservation

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: üì• Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: üî® Build with Maven
        run: mvn clean package -DskipTests

      - name: üóÇ Find WAR file
        run: echo "WAR_FILE=$(ls target/*.war | head -n 1)" >> $GITHUB_ENV

      - name: ‚¨ÜÔ∏è Upload WAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: war-file
          path: ${{ env.WAR_FILE }}

  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: war-file

      - name: üöÄ Deploy to DEV
        env:
          URL: ${{ secrets.TOMCAT_HOST }}
          USER: ${{ secrets.TOMCAT_USER }}
          PASS: ${{ secrets.TOMCAT_PASSWORD }}
        run: |
          WAR_FILE=$(ls *.war | head -n 1)
          echo "Deploying $WAR_FILE to DEV ($URL)"
          curl -v -u "$USER:$PASS" "$URL/list"
          curl -v -u "$USER:$PASS" --fail --show-error -T "$WAR_FILE" \
            "$URL/deploy?path=/train-ticket-reservation&update=true"

  deploy-test:
    needs: deploy-dev
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: war-file

      - name: üöÄ Deploy to TEST
        env:
          URL: ${{ secrets.TOMCAT_HOST1 }}
          USER: ${{ secrets.TOMCAT_USER1 }}
          PASS: ${{ secrets.TOMCAT_PASSWORD1 }}
        run: |
          WAR_FILE=$(ls *.war | head -n 1)
          echo "Deploying $WAR_FILE to TEST ($URL)"
          curl -v -u "$USER:$PASS" "$URL/list"
          curl -v -u "$USER:$PASS" --fail --show-error -T "$WAR_FILE" \
            "$URL/deploy?path=/train-ticket-reservation&update=true"

  deploy-prepod:
    needs: deploy-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: war-file

      - name: üöÄ Deploy to PRE-POD
        env:
          URL: ${{ secrets.TOMCAT_HOST2 }}
          USER: ${{ secrets.TOMCAT_USER2 }}
          PASS: ${{ secrets.TOMCAT_PASSWORD2 }}
        run: |
          WAR_FILE=$(ls *.war | head -n 1)
          echo "Deploying $WAR_FILE to PRE-POD ($URL)"
          curl -v -u "$USER:$PASS" "$URL/list"
          curl -v -u "$USER:$PASS" --fail --show-error -T "$WAR_FILE" \
            "$URL/deploy?path=/train-ticket-reservation&update=true"

  deploy-prod:
    needs: deploy-prepod
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: war-file

      - name: üöÄ Deploy to PROD
        env:
          URL: ${{ secrets.TOMCAT_HOST3 }}
          USER: ${{ secrets.TOMCAT_USER3 }}
          PASS: ${{ secrets.TOMCAT_PASSWORD3 }}
        run: |
          WAR_FILE=$(ls *.war | head -n 1)
          echo "Deploying $WAR_FILE to PROD ($URL)"
          curl -v -u "$USER:$PASS" "$URL/list"
          curl -v -u "$USER:$PASS" --fail --show-error -T "$WAR_FILE" \
            "$URL/deploy?path=/train-ticket-reservation&update=true"
